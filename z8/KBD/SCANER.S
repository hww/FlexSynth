; SCANER
; HEADER
; *******************************************************************
; ПОРТЫ И ЯЧЕЙКИ СКАНЕРА
; *******************************************************************
PR0	EQU	R0
PR1	EQU	R1
PR2	EQU	R2
; -------------------------------------------------------------------
	SEGMENT	IDATA
	ORG	20H

FIFO_S	EQU	10	; РАЗМЕР ФИФО
NUM	DS	FIFO_S	; ССЫЛКИ ФИФО
TIME	DS	FIFO_S	; ВРЕМЯ НАЖАТИЯ
FLAG_S	DS	FIFO_S	; ФЛАГИ ФИФО
FREE	DS	1
	DS	1	; ДЛЯ ВЫРАВНИВАНИЯ

DBASE	DS	49	; НА КАЖДУЮ КЛАВИШУ 1 БАЙТ
MX1	DS	7	; СТАРОЕ СОСТОЯНИЕ 1
MX2	DS	7	; СТАРОЕ СОСТОЯНИЕ 2
; -------------------------------------------------------------------
LINE	DS	1
MASK	DS	1
; *******************************************************************
;	ПРОВЕРКА ИЗМЕНЕНИЙ ВО ВСЕХ СТРОКАХ
; *******************************************************************
	SEGMENT	ICODE

SCANER_INIT:
	SCOPE
	LD	R4,#49 
	CLR	R5
$LOOP:
	LD	DBASE-1(R4),R5	; ОЧИСТИЛИ БАЗУ ДАННЫХ
	DJNZ	R4,$LOOP

	SCOPE
	LD	R4,#7
$LOOP:
	LD	MX1-1(R4),R5
	LD	MX2-1(R4),R5	; ОЧИСТИЛИ СОСТОЯНИЕ МАТРИЦЫ
	DJNZ	R4,$LOOP

	SCOPE
	LD	R4,#FIFO_S	; РАЗМЕР ФИФО
	LD	R6,#80H
$LOOP:
	LD	NUM-1(R4),R5
	LD	TIME-1(R4),R6	; ОЧИСТИЛИ ФИФО
	LD	FLAG_S-1(R4),R4	; СОЗДАНИЕ ПОРОЧНОГО КРУГА ВО ФЛАГАХ
	DJNZ	R4,$LOOP

	CLR	FREE		; ПЕРВЫЙ СВОБОДНЫЙ ВХОД В КЭШ = 0
	CLR	LINE		; ТЕКУЩАЯ СТРОКА = 0
	LD	MASK,#0FEH	; ТЕКУЩАЯ МАСКА = FEH
	RET

; *******************************************************************
; CКАНИРОВАНИЕ КЛАВИАТУРЫ И ВСЕ ОСТАЛЬНОЕ
; *******************************************************************

SCANER:
	SCOPE
	CALL	SCAN_MATRIX	; R4-R5= NEW1-NEW2
	COM	R4
	COM	R5
	LD	R8,LINE	; НОМЕР СТРОКИ
	LD	R6,MX1(R8)	; СТАРОЕ СОСТОЯНИЕ
	LD	R7,MX2(R8)	; СТАРОЕ 2

	IF	TESTK
		LD	R4,R6
		LD	R5,R7
		COM	R4
		COM	R5
	ENDIF

	LD	MX1(R8),R4
	LD	MX2(R8),R5	; НОВОЕ СОСТОЯНИЕ ЗАПИШЕМ
			; R4-R5 НОВОЕ СОСТОЯНИЕ
			; R6-R7 СТАРОЕ СОСТОЯНИЕ
	XOR	R6,R4
	XOR	R7,R5	; R6-R7 ИЗМЕНЕНИЯ

	SWAP	R8	; НОМЕР СТРОКИ В НОМЕР КЛАВИШИ
	RR	R8
	DEC	R8	; НОМЕР КЛАВИШИ - 1
	PUSH	R8
; -------------------------------------------------------------------
$LOOP:
	INC	R8	; КЛАВИША + 1
	RR	R4	; СДВИНЕМ СОСТОЯНИЕ КНОПОЧЕК
	RCF
	RRC	R6
	JR	C,$CHANGE1	; ЕСТЬ ИЗМЕНЕНИЕ
	OR	R6,R6
	JR	NZ,$LOOP	; ИЗМЕНЕНИЯ ЕЩЁ ЕСТЬ ?
	JR	$TEST2	; НЕТ
$CHANGE1:
	TCM	R4,#80H	; ПРОВЕРЯЕМ СОСТОЯНИЕ КНОПКИ
	JR	Z,$PRES1
	CALL	UP1	; ОТПУСТИЛИ 1
	JR	$LOOP
$PRES1:
	CALL	PRS1	; НАЖАЛИ 1
	JR	$LOOP
; -------------------------------------------------------------------
$TEST2:
	POP	R8
$LOOP2:
	INC	R8	; КЛАВИША + 1
	RR	R5	; СДВИНЕМ СОСТОЯНИЕ КНОПОЧЕК
	RCF
	RRC	R7
	JR	C,$CHANGE2	; ЕСТЬ ИЗМЕНЕНИЕ
	OR	R7,R7
	JR	NZ,$LOOP2	; ИЗМЕНЕНИЯ ЕЩЁ ЕСТЬ ?
	RET
$CHANGE2:
	TCM	R5,#80H	; ПРОВЕРЯЕМ СОСТОЯНИЕ КНОПКИ
	JR	NZ,$LOOP2
	CALL	PRS2	; НАЖАЛИ 2
	JR	$LOOP2
; -------------------------------------------------------------------
; *******************************************************************
; РЕАКЦИЯ НА НАЖАТИЯ
; INPUT	R8	НОМЕР КЛАВИШИ
; *******************************************************************
PRS1:
	SCOPE
	LD	R10,DBASE(R8)
	TCM	R10,#20H	; ЗАПИСЬ ЗАНЯТА ?
	JR	Z,$EXIT
	CALL	CREAT_FIFO	; R10 = ВХОД В ФИФО
	JR	C,$EXIT
	LD	NUM(R10),R8	; НОМЕР КЛАВИШИ
	CLR	R9
	LD	TIME(R10),R9	; ВРЕМЯ = 0
	LD	R9,#20H
	LD	FLAG_S(R10),R9	; ЗАПИСЬ ЗАНЯТА
	OR	R10,#20H	; ЗАПИСЬ ЗАНЯТА
	LD	DBASE(R8),R10	; ССЫЛКА НА ФИФО
$EXIT:
	RET

PRS2:
	SCOPE
	LD	R10,DBASE(R8)
	TCM	R10,#20H	; ЗАПИСЬ ЗАНЯТА ?
	JR	NZ,$EXIT
	TCM	R10,#40H	; НАЖАТИЕ БЫЛО ?
	JR	Z,$EXIT

	OR	R10,#40H	; НАЖАТИЕ БЫЛО
	LD	DBASE(R8),R10
	AND	R10,#0FH	; ССЫКА НА ФИФО
	LD	R11,FLAG_S(R10)
	OR	R11,#40H	; НАЖАТИЕ БЫЛО
	LD	FLAG_S(R10),R11
	LD	R11,TIME(R10)	; ВРЕМЯ
	OR	R11,#80H	; ОСТАНОВИТЬ ВРЕМЯ
	LD	TIME(R10),R11
$EXIT:
	RET

UP1:
	SCOPE
	LD	R10,DBASE(R8)
	TCM	R10,#20H	; ЗАПИСЬ ЗАНЯТА ?
	JR	NZ,$EXIT
	TCM	R10,#40H	; НАЖАТИЕ БЫЛО ?
	JR	NZ,$EXIT2

	OR	R10,#80H	; ОТПУСКАНИЕ БЫЛО
	LD	DBASE(R8),R10
	AND	R10,#0FH	; ССЫКА НА ФИФО
	LD	R11,FLAG_S(R10)
	OR	R11,#80H	; ОТПУСКАНИЕ БЫЛО
	LD	FLAG_S(R10),R11
$EXIT:
	RET

$EXIT2:
	CLR	R9
	LD	DBASE(R8),R9	; ОЧИСТИМ ЗАПИСЬ
	AND	R10,#0FH
	CALL	CLR_FIFO
	RET

; *******************************************************************
;	СКАНИРУЕМ ОДНУ СТРОКУ КЛАВИАТУРЫ 
; *******************************************************************
;
OPEN_DRAIN:	MACRO
	OR	PR1,#%7F	;ПОРТ B ВЫСТАВИМ  (7F)
	LD	PR2,#%FF	;ПОРТ C ВЫСТАВИМ  (FF)
	LD	P01M,#00000100B ;P0-OUTPUT
	LD	PR0,#%FF	;ПОРТ K ВЫСТАВИМ ОДИН (FF)
	LD	P01M,#01000101B ;P0-INPUT, P1-OUTPUT, INTERNAL STACK
	ENDMAC

; *******************************************************************
;	СКАНИРУЕМ ВСЮ МАТРИЦУ КЛАВИАТУРЫ 
; *******************************************************************

SCAN_MATRIX:
	SCOPE
	INC	LINE		; СЛЕДУЮЩАЯ СТРОКА
	RL	MASK		; МАСКУ СДВИНЕМ
	JR	MI,$NO_END_L	; 0 В 7 БИТЕ
	LD	MASK,#11111110B ; НАЧАЛЬНАЯ МАСКА
	CLR	LINE		; НАЧАЛЬНАЯ СТРОКА
	CALL	PLUS_FIFO	; ВРЕМЯ ИЗМЕНИЛОСЬ НА + 1
$NO_END_L:
				; СКАНИРУЕМ СТРОКУ
	OPEN_DRAIN		; ПОРТ ДЛЯ ЧТЕНИЯ OPEN DRAIN
	AND	PR1,MASK	; ПОРТ B ВЫСТАВИМ ОДИН (0)
	LD	R4,PR0
	OPEN_DRAIN		; ПОРТ ДЛЯ ЧТЕНИЯ OPEN DRAIN
	LD	PR2,MASK	; ПОРТ C ВЫСТАВИМ ОДИН (0)
	LD	R5,PR0	; ПРОЧИТАЕМ СТОЛБЦЫ
	RET
; *******************************************************************
; РАБОТА С ФИФО
; *******************************************************************
	SCOPE
PLUS_FIFO:
	LD	R9,#FIFO_S
$LOOP:
	LD	R11,FLAG_S-1(R9)
	TCM	R11,#10H	; ЗАВЕРШЕНА ОПЕРАЦИЯ С БАЙТОМ
	JR	NZ,$NOT
	LD	R10,NUM-1(R9)
	CLR	R11
	LD	DBASE(R10),R11	; ОЧИСТИЛИ ССЫЛКУ НА ФИФО
	LD	R10,R9
	DEC	R10
	CALL	CLR_FIFO
	DJNZ	R9,$LOOP
	RET
$NOT:
	LD	R11,TIME-1(R9)	; ВРЕМЯ
	CP	R11,#07FH
	JR	NC,$EOF
	INC	R11
	LD	TIME-1(R9),R11	; ВРЕМЯ
$EOF:
	DJNZ	R9,$LOOP
	RET
; *******************************************************************
; СОЗДАТЬ ЗАПИСЬ ЗАПИСЬ
; *******************************************************************
	SCOPE
CREAT_FIFO:
	LD	R10,FREE	; ПЕРВЫЙ СВОБОДНЫЙ БАЙТ
	CP	R10,#FIFO_S
	JR	Z,$EOF
	LD	R11,FLAG_S(R10)	; СЛЕДУЮЩИЙ СВОБОДНЫЙ ВХОД
	LD	FREE,R11	; НОВЫЙ СВОБОДНЫЙ ВХОД
	RCF
	RET
$EOF:
	SCF
	RET
; *******************************************************************
; УДАЛИТЬ ЗАПИСЬ
; *******************************************************************
CLR_FIFO:
	SCOPE
	LD	R11,FREE	; ПЕРВЫЙ СВОБОДНЫЙ ВХОД
	LD	FLAG_S(R10),R11
	LD	FREE,R10	; НОВЫЙ СВОБОДНЫЙ ВХОД
	CLR	R11
	LD	NUM(R10),R11
	LD	TIME(R10),R11
	RET
